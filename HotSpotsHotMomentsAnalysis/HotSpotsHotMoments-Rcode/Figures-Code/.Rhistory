# ignore saving the aov() since the formatting was a mess and we're ignoring it anyways
# lme() anova output
write.xlsx(anova(lme_twoway_droughttopo), file=paste(path.expand(pathsavetab), "stats-tables/CO2_twowayANOVA.xlsx",sep=""), sheetName="lme() table")
# post-hoc tukey with bonferroni
write.xlsx(mtests_1, file=paste(path.expand(pathsavetab), "stats-tables/CO2_twowayANOVA.xlsx",sep=""), sheetName="post-hoc tukey with bonf. IV #1", append=TRUE)
write.xlsx(mtests_2, file=paste(path.expand(pathsavetab), "stats-tables/CO2_twowayANOVA.xlsx",sep=""), sheetName="post-hoc tukey with bonf. IV #2", append=TRUE)
# set significance stars for graphs
cor_stars <- numeric(length=2)
# cycle through to set number of stars
for (i in 1:2) {
if(anova(lme_twoway_droughttopo)[1+i,4] < 0.001){
cor_stars[i] <- "***"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.01){
cor_stars[i] <- "**"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.05){
cor_stars[i] <- "*"
} else {
cor_stars[i] <- "NS"
}
}
sig_stars_CO2twoway <- cor_stars
sig_stars_CO2twoway
# lme can't handle columns with any NAs
arrayGHGdf_noNA <- subset(arrayGHGdf, !is.na(CH4_nmolm2s_fluxuse))
# should NOT log transform based on the diagnostic plots of doing this without transformation
# aov version of the two-way test
aov_twoway_droughttopo = aov(CH4_nmolm2s_fluxuse ~ DroughtTimePds + Topo + Error(Date/(DroughtTimePds + Topo)), data=arrayGHGdf_noNA)
# lme version of the one-way test
lme_twoway_droughttopo = lme(CH4_nmolm2s_fluxuse ~ DroughtTimePds + Topo, data=arrayGHGdf_noNA, random = ~1|Date/Topo/DroughtTimePds)
# summary info; note different F values (apparently this is a known consequence)
summary(aov_twoway_droughttopo)
anova(lme_twoway_droughttopo)
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
scatter.smooth(fitted(lme_twoway_droughttopo),sqrt(abs(resid(lme_twoway_droughttopo))))
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
scatter.smooth(fitted(lme_twoway_droughttopo),sqrt(abs(resid(lme_twoway_droughttopo))))
sorttemp<-sort(arrayGHGdf$CH4_nmolm2s_fluxuse, decreasing = T)
sorttemp[1:50]
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
scatter.smooth(fitted(lme_twoway_droughttopo),sqrt(abs(resid(lme_twoway_droughttopo))))
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
plot(lme_twoway_droughttopo,DroughtTimePds~resid(.))
plot(lme_twoway_droughttopo,Topo~resid(.))
aov_twoway_droughttopo = aov(log(CH4_nmolm2s_fluxuse) ~ DroughtTimePds + Topo + Error(Date/(DroughtTimePds + Topo)), data=arrayGHGdf_noNA)
# lme version of the one-way test
lme_twoway_droughttopo = lme(log(CH4_nmolm2s_fluxuse) ~ DroughtTimePds + Topo, data=arrayGHGdf_noNA, random = ~1|Date/Topo/DroughtTimePds)
# summary info; note different F values (apparently this is a known consequence)
summary(aov_twoway_droughttopo)
anova(lme_twoway_droughttopo)
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
scatter.smooth(fitted(lme_twoway_droughttopo),sqrt(abs(resid(lme_twoway_droughttopo))))
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
plot(lme_twoway_droughttopo,DroughtTimePds~resid(.))
plot(lme_twoway_droughttopo,Topo~resid(.))
aov_twoway_droughttopo = aov(log(CH4_nmolm2s_fluxuse) ~ DroughtTimePds + Topo + Error(Date/(DroughtTimePds + Topo)), data=arrayGHGdf_noNA)
summary(aov_twoway_droughttopo)
aov_twoway_droughttopo = aov(CH4_nmolm2s_fluxuse ~ DroughtTimePds + Topo + Error(Date/(DroughtTimePds + Topo)), data=arrayGHGdf_noNA)
summary(aov_twoway_droughttopo)
## CH4 fluxes
# lme can't handle columns with any NAs
arrayGHGdf_noNA <- subset(arrayGHGdf, !is.na(CH4_nmolm2s_fluxuse))
# should NOT log transform based on the diagnostic plots of doing this without transformation
# the diagnostic plots are crappy, but the diagnostic plots were equally crappy when I log transformed
# aov version of the two-way test
aov_twoway_droughttopo = aov(CH4_nmolm2s_fluxuse ~ DroughtTimePds + Topo + Error(Date/(DroughtTimePds + Topo)), data=arrayGHGdf_noNA)
# lme version of the one-way test
lme_twoway_droughttopo = lme(log(CH4_nmolm2s_fluxuse) ~ DroughtTimePds + Topo, data=arrayGHGdf_noNA, random = ~1|Date/Topo/DroughtTimePds)
# summary info; note different F values (apparently this is a known consequence)
summary(aov_twoway_droughttopo)
anova(lme_twoway_droughttopo)
# save diagnostic plots
# fitted vs residuals
png(file = paste(pathsavetab, "ANOVAdiagnostics/CH4_nmolm2s_fluxuse_twowayANOVAdiagnostics_1.png", sep=""),width=6,height=6,units="in",res=150)
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
dev.off()
# fitted vs sqrt(abs(residuals))
png(file = paste(pathsavetab, "ANOVAdiagnostics/CH4_nmolm2s_fluxuse_twowayANOVAdiagnostics_2.png", sep=""),width=6,height=6,units="in",res=150)
scatter.smooth(fitted(lme_twoway_droughttopo),sqrt(abs(resid(lme_twoway_droughttopo))))
dev.off()
# qq plot
png(file = paste(pathsavetab, "ANOVAdiagnostics/CH4_nmolm2s_fluxuse_twowayANOVAdiagnostics_3.png", sep=""),width=6,height=6,units="in",res=150)
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
dev.off()
# boxplot of residuals
png(file = paste(pathsavetab, "ANOVAdiagnostics/CH4_nmolm2s_fluxuse_twowayANOVAdiagnostics_4.png", sep=""),width=6,height=6,units="in",res=150)
plot(lme_twoway_droughttopo,DroughtTimePds~resid(.))
dev.off()
# boxplot of residuals
png(file = paste(pathsavetab, "ANOVAdiagnostics/CH4_nmolm2s_fluxuse_twowayANOVAdiagnostics_5.png", sep=""),width=6,height=6,units="in",res=150)
plot(lme_twoway_droughttopo,Topo~resid(.))
dev.off()
# save anova info
# post hoc test
posthoc_glht_1 <- summary(glht(lme_twoway_droughttopo, linfct=mcp(DroughtTimePds = "Tukey")), test = adjusted(type = "bonferroni"))
posthoc_glht_2 <- summary(glht(lme_twoway_droughttopo, linfct=mcp(Topo = "Tukey")), test = adjusted(type = "bonferroni"))
posthoc_glht_1
posthoc_glht_2
# save posthoc test as a nice table later
x <- posthoc_glht_1
pq<-summary(x)$test
mtests <- cbind(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(x$alternativ, less = paste("Pr(<", ifelse(x$df ==0, "z", "t"), ")", sep = ""), greater = paste("Pr(>", ifelse(x$df == 0, "z", "t"), ")", sep = ""), two.sided = paste("Pr(>|",                                                                       ifelse(x$df == 0, "z", "t"), "|)", sep = ""))
colnames(mtests) <- c("Estimate", "Std. Error", ifelse(x$df ==0, "z value", "t value"), pname)
mtests_1 <- mtests
# save posthoc test as a nice table later
x <- posthoc_glht_2
pq<-summary(x)$test
mtests <- cbind(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(x$alternativ, less = paste("Pr(<", ifelse(x$df ==0, "z", "t"), ")", sep = ""), greater = paste("Pr(>", ifelse(x$df == 0, "z", "t"), ")", sep = ""), two.sided = paste("Pr(>|",                                                                       ifelse(x$df == 0, "z", "t"), "|)", sep = ""))
colnames(mtests) <- c("Estimate", "Std. Error", ifelse(x$df ==0, "z value", "t value"), pname)
mtests_2 <- mtests
# save tables as single excel doc
# ignore saving the aov() since the formatting was a mess and we're ignoring it anyways
# lme() anova output
write.xlsx(anova(lme_twoway_droughttopo), file=paste(path.expand(pathsavetab), "stats-tables/CH4_twowayANOVA.xlsx",sep=""), sheetName="lme() table")
# post-hoc tukey with bonferroni
write.xlsx(mtests_1, file=paste(path.expand(pathsavetab), "stats-tables/CH4_twowayANOVA.xlsx",sep=""), sheetName="post-hoc tukey with bonf. IV #1", append=TRUE)
write.xlsx(mtests_2, file=paste(path.expand(pathsavetab), "stats-tables/CH4_twowayANOVA.xlsx",sep=""), sheetName="post-hoc tukey with bonf. IV #2", append=TRUE)
# set significance stars for graphs
cor_stars <- numeric(length=2)
# cycle through to set number of stars
for (i in 1:2) {
if(anova(lme_twoway_droughttopo)[1+i,4] < 0.001){
cor_stars[i] <- "***"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.01){
cor_stars[i] <- "**"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.05){
cor_stars[i] <- "*"
} else {
cor_stars[i] <- "NS"
}
}
sig_stars_CH4twoway <- cor_stars
arrayGHGdf_noNA <- subset(arrayGHGdf, !is.na(N2O_nmolm2s_fluxuse))
aov_twoway_droughttopo = aov(log(abs(N2O_nmolm2s_fluxuse)) ~ DroughtTimePds + Topo + Error(Date/(DroughtTimePds + Topo)), data=arrayGHGdf_noNA)
# lme version of the one-way test
lme_twoway_droughttopo = lme(log(abs(N2O_nmolm2s_fluxuse)) ~ DroughtTimePds + Topo, data=arrayGHGdf_noNA, random = ~1|Date/Topo/DroughtTimePds)
# summary info; note different F values (apparently this is a known consequence)
summary(aov_twoway_droughttopo)
anova(lme_twoway_droughttopo)
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
scatter.smooth(fitted(lme_twoway_droughttopo),sqrt(abs(resid(lme_twoway_droughttopo))))
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
plot(lme_twoway_droughttopo,DroughtTimePds~resid(.))
plot(lme_twoway_droughttopo,Topo~resid(.))
# summary info; note different F values (apparently this is a known consequence)
summary(aov_twoway_droughttopo)
anova(lme_twoway_droughttopo)
# save diagnostic plots
# fitted vs residuals
png(file = paste(pathsavetab, "ANOVAdiagnostics/N2O_nmolm2s_fluxuse_twowayANOVAdiagnostics_1.png", sep=""),width=6,height=6,units="in",res=150)
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
dev.off()
# fitted vs sqrt(abs(residuals))
png(file = paste(pathsavetab, "ANOVAdiagnostics/N2O_nmolm2s_fluxuse_twowayANOVAdiagnostics_2.png", sep=""),width=6,height=6,units="in",res=150)
scatter.smooth(fitted(lme_twoway_droughttopo),sqrt(abs(resid(lme_twoway_droughttopo))))
dev.off()
# qq plot
png(file = paste(pathsavetab, "ANOVAdiagnostics/N2O_nmolm2s_fluxuse_twowayANOVAdiagnostics_3.png", sep=""),width=6,height=6,units="in",res=150)
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
dev.off()
# boxplot of residuals
png(file = paste(pathsavetab, "ANOVAdiagnostics/N2O_nmolm2s_fluxuse_twowayANOVAdiagnostics_4.png", sep=""),width=6,height=6,units="in",res=150)
plot(lme_twoway_droughttopo,DroughtTimePds~resid(.))
dev.off()
# boxplot of residuals
png(file = paste(pathsavetab, "ANOVAdiagnostics/N2O_nmolm2s_fluxuse_twowayANOVAdiagnostics_5.png", sep=""),width=6,height=6,units="in",res=150)
plot(lme_twoway_droughttopo,Topo~resid(.))
dev.off()
# save anova info
# post hoc test
posthoc_glht_1 <- summary(glht(lme_twoway_droughttopo, linfct=mcp(DroughtTimePds = "Tukey")), test = adjusted(type = "bonferroni"))
posthoc_glht_2 <- summary(glht(lme_twoway_droughttopo, linfct=mcp(Topo = "Tukey")), test = adjusted(type = "bonferroni"))
posthoc_glht_1
posthoc_glht_2
# save posthoc test as a nice table later
x <- posthoc_glht_1
pq<-summary(x)$test
mtests <- cbind(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(x$alternativ, less = paste("Pr(<", ifelse(x$df ==0, "z", "t"), ")", sep = ""), greater = paste("Pr(>", ifelse(x$df == 0, "z", "t"), ")", sep = ""), two.sided = paste("Pr(>|",                                                                       ifelse(x$df == 0, "z", "t"), "|)", sep = ""))
colnames(mtests) <- c("Estimate", "Std. Error", ifelse(x$df ==0, "z value", "t value"), pname)
mtests_1 <- mtests
# save posthoc test as a nice table later
x <- posthoc_glht_2
pq<-summary(x)$test
mtests <- cbind(pq$coefficients, pq$sigma, pq$tstat, pq$pvalues)
error <- attr(pq$pvalues, "error")
pname <- switch(x$alternativ, less = paste("Pr(<", ifelse(x$df ==0, "z", "t"), ")", sep = ""), greater = paste("Pr(>", ifelse(x$df == 0, "z", "t"), ")", sep = ""), two.sided = paste("Pr(>|",                                                                       ifelse(x$df == 0, "z", "t"), "|)", sep = ""))
colnames(mtests) <- c("Estimate", "Std. Error", ifelse(x$df ==0, "z value", "t value"), pname)
mtests_2 <- mtests
# save tables as single excel doc
# ignore saving the aov() since the formatting was a mess and we're ignoring it anyways
# lme() anova output
write.xlsx(anova(lme_twoway_droughttopo), file=paste(path.expand(pathsavetab), "stats-tables/N2O_twowayANOVA.xlsx",sep=""), sheetName="lme() table")
# post-hoc tukey with bonferroni
write.xlsx(mtests_1, file=paste(path.expand(pathsavetab), "stats-tables/N2O_twowayANOVA.xlsx",sep=""), sheetName="post-hoc tukey with bonf. IV #1", append=TRUE)
write.xlsx(mtests_2, file=paste(path.expand(pathsavetab), "stats-tables/N2O_twowayANOVA.xlsx",sep=""), sheetName="post-hoc tukey with bonf. IV #2", append=TRUE)
# set significance stars for graphs
cor_stars <- numeric(length=2)
# cycle through to set number of stars
for (i in 1:2) {
if(anova(lme_twoway_droughttopo)[1+i,4] < 0.001){
cor_stars[i] <- "***"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.01){
cor_stars[i] <- "**"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.05){
cor_stars[i] <- "*"
} else {
cor_stars[i] <- "NS"
}
}
sig_stars_N2Otwoway <- cor_stars
rhosize=3
p6a <- ggplot(summarytabDroughtTimePdsA2, aes(x=DroughtTimePds, y=meanCO2_umolm2s_fluxuse)) + geom_bar(stat = "identity") + xlab("Drought Time Period") + ylab("CO2 Flux (umol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), width = 0.65)
# CH4
p6b <- ggplot(summarytabDroughtTimePdsB2, aes(x=DroughtTimePds, y=meanCH4_nmolm2s_fluxuse)) + geom_bar(stat = "identity") + xlab("Drought Time Period") + ylab("CH4 Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), width = 0.65)
# N2O
p6c <- ggplot(summarytabDroughtTimePdsC2, aes(x=DroughtTimePds, y=meanN2O_nmolm2s_fluxuse)) + geom_bar(stat = "identity") + xlab("Drought Time Period") + ylab("N2O Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), width = 0.65)
p6a
p6b
p6a
p6b
p6c
p6b
p6c
p7a <- ggplot(summarytabDroughtTimePdsA1, aes(x=DroughtTimePds, y=meanCO2_umolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("CO2 Flux (umol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_CO2twoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_CO2twoway[2]), size=rhosize)
p7a
ptmp
ptmp<-ggplot(summarytabDroughtTimePdsA1, aes(x=DroughtTimePds, y=meanCO2_umolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("CO2 Flux (umol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_CO2twoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_CO2twoway[2]), size=rhosize)
ptmp
summarytabDroughtTimePdsA1
p7a
p7b <- ggplot(summarytabDroughtTimePdsB1, aes(x=DroughtTimePds, y=meanCH4_nmolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("CH4 Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_CH4twoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_CH4twoway[2]), size=rhosize)
# N2O
p7c <- ggplot(summarytabDroughtTimePdsC1, aes(x=DroughtTimePds, y=meanN2O_nmolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("N2O Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_N2Otwoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_N2Otwoway[2]), size=rhosize)
p7b
p6b
p7b
########################################################################
# GHG BAR PLOT BY DROUGHT TIME PERIOD
# font size for stats annotations
rhosize=3
# bar graphs; bar for each DroughtTimePds
# CO2
p6a <- ggplot(summarytabDroughtTimePdsA2, aes(x=DroughtTimePds, y=meanCO2_umolm2s_fluxuse)) + geom_bar(stat = "identity") + xlab("Drought Time Period") + ylab("CO2 Flux (umol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), width = 0.65)
# CH4
p6b <- ggplot(summarytabDroughtTimePdsB2, aes(x=DroughtTimePds, y=meanCH4_nmolm2s_fluxuse)) + geom_bar(stat = "identity") + xlab("Drought Time Period") + ylab("CH4 Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), width = 0.65)
# N2O
p6c <- ggplot(summarytabDroughtTimePdsC2, aes(x=DroughtTimePds, y=meanN2O_nmolm2s_fluxuse)) + geom_bar(stat = "identity") + xlab("Drought Time Period") + ylab("N2O Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), width = 0.65)
# bar graphs; bar for each DroughtTimePds and each topo location
# CO2
p7a <- ggplot(summarytabDroughtTimePdsA1, aes(x=DroughtTimePds, y=meanCO2_umolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("CO2 Flux (umol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_CO2twoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_CO2twoway[2]), size=rhosize)
ptmp<-ggplot(summarytabDroughtTimePdsA1, aes(x=DroughtTimePds, y=meanCO2_umolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("CO2 Flux (umol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_CO2twoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_CO2twoway[2]), size=rhosize)
### how do I add the N values to each bar?
ptmp + annotate("text", x = seq(0, 4, length.out = 12), y = 0.5, label = summarytabDroughtTimePdsA1$N[1:12], size=rhosize-1)
summarytabDroughtTimePdsA1
# CH4
p7b <- ggplot(summarytabDroughtTimePdsB1, aes(x=DroughtTimePds, y=meanCH4_nmolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("CH4 Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_CH4twoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_CH4twoway[2]), size=rhosize)
# N2O
p7c <- ggplot(summarytabDroughtTimePdsC1, aes(x=DroughtTimePds, y=meanN2O_nmolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("N2O Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_N2Otwoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_N2Otwoway[2]), size=rhosize)
###### THINGS TO DO
# using the base data:
# chamber might increase by 10-20 ppb in N2O over the 10 minutes, so we should expect good fluxes to have a meanN2Oppb of 320 +/- 30 ppb -> those data are associated with good concentration readings
# does the histogram of the meanN2Oppb drift over time?  indication that something was wonky
# if that wasn't the case, the instrument is probably behaving acceptably, but the negative N2O concentrations were likely event based
# aside on what Scott did: had to correct the N2O line, since that can drift if the analyzer reads a weird concentration for a long time (like way too high or something)
# another option is that the deadbands are a problem from when I analyzed the data - if there was a large spike in the data and the tubing length is seen as too short, then the deadband will get in the wrong place
# should probably just re-do all these measurements
# set it correctly on one chamber that is a really good one, and that should be good across the chambers, time periods, etc.
# also think about cutting everything where the deployment time was only +/- 60 seconds, not several minutes, like I have now
# also you can cut fluxes where the mean CO2 is too large, since that could mean that the chamber was stuck closed
## save figures
# save figures without topo categories
png(file = paste(pathsavefigs, "drought_periods_notopo_CO2.png", sep=""),width=6,height=4,units="in",res=400)
p6a
dev.off()
png(file = paste(pathsavefigs, "drought_periods_notopo_CH4.png", sep=""),width=6,height=4,units="in",res=400)
p6b
dev.off()
png(file = paste(pathsavefigs, "drought_periods_notopo_N2O.png", sep=""),width=6,height=4,units="in",res=400)
p6c
dev.off()
# stacked into one figure
png(file = paste(pathsavefigs, "drought_periods_notopo_allpanels.png", sep=""),width=5,height=12,units="in",res=400)
grid.arrange(p6a, p6b, p6c, nrow = 3, ncol = 1)
dev.off()
# save figures with topo categories
png(file = paste(pathsavefigs, "drought_periods_topo_CO2.png", sep=""),width=7,height=4,units="in",res=400)
p7a
dev.off()
png(file = paste(pathsavefigs, "drought_periods_topo_CH4.png", sep=""),width=7,height=4,units="in",res=400)
p7b
dev.off()
png(file = paste(pathsavefigs, "drought_periods_topo_N2O.png", sep=""),width=7,height=4,units="in",res=400)
p7c
dev.off()
# stacked into one figure
png(file = paste(pathsavefigs, "drought_periods_topo_allpanels.png", sep=""),width=7,height=12,units="in",res=400)
grid.arrange(p7a, p7b, p7c, nrow = 3, ncol = 1)
dev.off()
## save csvs of the drought period summaries
# summary csvs without topo categories
fname = paste(pathsavetab, "drought_periods_summarytable_notopo_CO2.csv" ,sep="")
write.csv(summarytabDroughtTimePdsA2, file = fname, na = "")
fname = paste(pathsavetab, "drought_periods_summarytable_notopo_CH4.csv" ,sep="")
write.csv(summarytabDroughtTimePdsB2, file = fname, na = "")
fname = paste(pathsavetab, "drought_periods_summarytable_notopo_N2O.csv" ,sep="")
write.csv(summarytabDroughtTimePdsC2, file = fname, na = "")
# summary csvs with topo categories
fname = paste(pathsavetab, "drought_periods_summarytable_topo_CO2.csv" ,sep="")
write.csv(summarytabDroughtTimePdsA1, file = fname, na = "")
fname = paste(pathsavetab, "drought_periods_summarytable_topo_CH4.csv" ,sep="")
write.csv(summarytabDroughtTimePdsB1, file = fname, na = "")
fname = paste(pathsavetab, "drought_periods_summarytable_topo_N2O.csv" ,sep="")
write.csv(summarytabDroughtTimePdsC1, file = fname, na = "")
#topocolorsGHG <- c("blue2","darkmagenta","firebrick2")
#topocolorsGHG <- rev(colorRampPalette(c('red','blue'), space = "Lab")(3))
topocolorsGHG <- rev(colorRampPalette(c('red','orange','purple','blue','dark blue'), space = "Lab")(3))
topobreaks <- c("1","2","3","4","5","6","7")
topolabs <- c("1 (Ridge)","2","3","4","5","6","7 (Valley)")
# CO2 by date (mean and se)
p3 <- ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
# CH4 by date (mean and se)
p4 <- ggplot(summarytab4atmp, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
# N2O by date (mean and se)
p5 <- ggplot(summarytab5atmp, aes(x=Date, y=meanN2O_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), alpha=0.5) + ylab("N2O Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
# save figures
png(file = paste(pathsavefigs, "time_series_CO2.png", sep=""),width=10,height=7,units="in",res=400)
p3
dev.off()
# save figures
png(file = paste(pathsavefigs, "time_series_CH4.png", sep=""),width=10,height=7,units="in",res=400)
p4
dev.off()
# save figures
png(file = paste(pathsavefigs, "time_series_N2O.png", sep=""),width=10,height=7,units="in",res=400)
p5
dev.off()
p4
p4 <- ggplot(summarytab4atmp, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,50) #+ geom_line()
p4
p4 <- ggplot(summarytab4atmp, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,70) #+ geom_line()
p4
p5
# save figures
png(file = paste(pathsavefigs, "time_series_CH4.png", sep=""),width=10,height=7,units="in",res=400)
p4
dev.off()
tail(arrayGHGdf$DateTime2)
arrayGHGdf_systems <- subset(arrayGHGdf, arrayGHGdf$DateTime2 > "2016-01-01 09:17:00 UTC")
View(arrayGHGdf_systems)
arrayGHGdf_systems <- subset(arrayGHGdf, arrayGHGdf$DateTime2 > "2016-03-01 09:17:00 UTC")
View(arrayGHGdf_systems)
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
summarytab3atmp
str(arrayGHGdf_systems)
summarytab3atmpsys <- summarySE(data=arrayGHGdf_systems, measurevar="CO2_umolm2s_fluxuse", c("Date", "Chamber", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
summarytab3atmpsys
# summarySE CO2
summarytab3atmpsys <- summarySE(data=arrayGHGdf_systems, measurevar="CO2_umolm2s_fluxuse", c("Date", "Chamber", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
summarytab3btmpsys <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("Date", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
# summarySE CH4
summarytab4atmpsys <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("Date", "Chamber", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
summarytab4btmpsys <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("Date", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
# summarySE N2O
summarytab5atmpsys <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("Date", "Chamber", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
summarytab5btmpsys <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("Date", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
p3sys <- ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
p3sys
str(summarytab3atmpsys)
ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2)
p3sys <- ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
p3sys
ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5)
ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)")
ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw()
p3sys <- ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
p3sys
p4sys <- ggplot(summarytab4atmpsys, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,70) #+ geom_line()+ theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25')))
p4sys
p4sys <- ggplot(summarytab4atmpsys, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,70) #+ geom_line()+ theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25')))
p4sys
ggplot(summarytab4atmpsys, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + facet_wrap( ~ System, nrow=2)
ggplot(summarytab5atmpsys, aes(x=Date, y=meanN2O_nmolm2s_fluxuse, color=Topo)) + geom_point() + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), alpha=0.5)
p5sys <- ggplot(summarytab5atmpsys, aes(x=Date, y=meanN2O_nmolm2s_fluxuse, color=Topo)) + geom_point() + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), alpha=0.5) + ylab("N2O Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
chemdetect1
N2Odrift1
chemdetect1
N2Odrift1
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuseerror, color=CH4_nmolm2s_fluxuse)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw()
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuseerror, color=CH4_nmolm2s_fluxuse)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuseerror, color=CH4_nmolm2s_fluxuse)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-50000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 300)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 300) + xlim(-20,150)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 300) + xlim(-50,150)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 300) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-500, 300) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-500, 50) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-500, 50) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw()
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(50,5000) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-50,5000) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-10,5000) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-10,500) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-10,100) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-10,200) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"))
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient2(limits=c(0, 50000))
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 50000))
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 50000), low="red", high="black")
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=abs(CH4_nmolm2s_fluxuseerror))) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 50000), low="red", high="black")
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=abs(CH4_nmolm2s_fluxuseerror))) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 5000), low="red", high="black")
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=abs(CH4_nmolm2s_fluxuseerror))) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 500), low="red", high="black")
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=abs(CH4_nmolm2s_fluxuseerror))) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 100), low="red", high="black")
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90))
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25')))
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)")
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-05-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG)
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-05-10'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG)
errorcutoff <- 100
# print info about removed
tmp <- abs(arrayGHGdf$N2O_nmolm2s_fluxuseerror)
tmp2 <- tmp[tmp <= errorcutoff]
durationok <- length(tmp2)/length(tmp)
cat("You have removed flux measurements where the N2O error ratio was above the threshold proportion (",errorcutoff, "); this left ", durationok*100, "% of the samples remaining (", length(tmp2), " of ", length(tmp), ").", sep="")
arrayGHGdf$N2O_nmolm2s_fluxuse[abs(arrayGHGdf$N2O_nmolm2s_fluxuseerror) > errorcutoff] <- NA
arrayGHGdf$N2O_nmolm2s_fluxusetype[abs(arrayGHGdf$N2O_nmolm2s_fluxuseerror) > errorcutoff] <- NA
# summarySE CO2
summarytab3atmp <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("Date", "Chamber", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytab3btmp <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("Date", "Topo"), na.rm=TRUE, renameallcols=TRUE)
# summarySE CH4
summarytab4atmp <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("Date", "Chamber", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytab4btmp <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("Date", "Topo"), na.rm=TRUE, renameallcols=TRUE)
# summarySE N2O
summarytab5atmp <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("Date", "Chamber", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytab5btmp <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("Date", "Topo"), na.rm=TRUE, renameallcols=TRUE)
# convert summary table dates
#summarytab3a$Date <- ymd_hms(summarytab3atmp$Date)
#summarytab2$Date <- ymd_hms(summarytab2$Date)
# take out weird NA lines
#summarytab1 <- subset(summarytab1tmp,summarytab1tmp$N>0.5)
#summarytab2 <- subset(summarytab2tmp,summarytab2tmp$N>0.5)
########################################################################
# CO2, CH4, N2O TIME SERIES
#topocolorsGHG <- c("blue2","darkmagenta","firebrick2")
#topocolorsGHG <- rev(colorRampPalette(c('red','blue'), space = "Lab")(3))
topocolorsGHG <- rev(colorRampPalette(c('red','orange','purple','blue','dark blue'), space = "Lab")(3))
topobreaks <- c("1","2","3","4","5","6","7")
topolabs <- c("1 (Ridge)","2","3","4","5","6","7 (Valley)")
# CO2 by date (mean and se)
p3 <- ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
# CH4 by date (mean and se)
p4 <- ggplot(summarytab4atmp, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,70) #+ geom_line()
# N2O by date (mean and se)
p5 <- ggplot(summarytab5atmp, aes(x=Date, y=meanN2O_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), alpha=0.5) + ylab("N2O Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
p5
# summarySE sets - by drought period and topographic location for each gas, using fluxuse variables
summarytabDroughtTimePdsA1 <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("DroughtTimePds", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsA2 <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("DroughtTimePds"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsB1 <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("DroughtTimePds", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsB2 <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("DroughtTimePds"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsC1 <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("DroughtTimePds", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsC2 <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("DroughtTimePds"), na.rm=TRUE, renameallcols=TRUE)
arrayGHGdf_noNA <- subset(arrayGHGdf, !is.na(N2O_nmolm2s_fluxuse))
aov_twoway_droughttopo = aov(log(abs(N2O_nmolm2s_fluxuse)) ~ DroughtTimePds + Topo + Error(Date/(DroughtTimePds + Topo)), data=arrayGHGdf_noNA)
# lme version of the one-way test
lme_twoway_droughttopo = lme(log(abs(N2O_nmolm2s_fluxuse)) ~ DroughtTimePds + Topo, data=arrayGHGdf_noNA, random = ~1|Date/Topo/DroughtTimePds)
# summary info; note different F values (apparently this is a known consequence)
summary(aov_twoway_droughttopo)
anova(lme_twoway_droughttopo)
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
scatter.smooth(fitted(lme_twoway_droughttopo),sqrt(abs(resid(lme_twoway_droughttopo))))
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
plot(lme_twoway_droughttopo,DroughtTimePds~resid(.))
plot(lme_twoway_droughttopo,Topo~resid(.))
posthoc_glht_1 <- summary(glht(lme_twoway_droughttopo, linfct=mcp(DroughtTimePds = "Tukey")), test = adjusted(type = "bonferroni"))
posthoc_glht_2 <- summary(glht(lme_twoway_droughttopo, linfct=mcp(Topo = "Tukey")), test = adjusted(type = "bonferroni"))
posthoc_glht_1
posthoc_glht_2
# set significance stars for graphs
cor_stars <- numeric(length=2)
# cycle through to set number of stars
for (i in 1:2) {
if(anova(lme_twoway_droughttopo)[1+i,4] < 0.001){
cor_stars[i] <- "***"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.01){
cor_stars[i] <- "**"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.05){
cor_stars[i] <- "*"
} else {
cor_stars[i] <- "NS"
}
}
sig_stars_N2Otwoway <- cor_stars
p6c <- ggplot(summarytabDroughtTimePdsC2, aes(x=DroughtTimePds, y=meanN2O_nmolm2s_fluxuse)) + geom_bar(stat = "identity") + xlab("Drought Time Period") + ylab("N2O Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), width = 0.65)
p6c
p7c <- ggplot(summarytabDroughtTimePdsC1, aes(x=DroughtTimePds, y=meanN2O_nmolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("N2O Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_N2Otwoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_N2Otwoway[2]), size=rhosize)
p7c
