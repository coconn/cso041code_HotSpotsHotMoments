topobreaks <- c("1","2","3","4","5","6","7")
topolabs <- c("1 (Ridge)","2","3","4","5","6","7 (Valley)")
# CO2 by date (mean and se)
p3 <- ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
# CH4 by date (mean and se)
p4 <- ggplot(summarytab4atmp, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
# N2O by date (mean and se)
p5 <- ggplot(summarytab5atmp, aes(x=Date, y=meanN2O_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), alpha=0.5) + ylab("N2O Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
# save figures
png(file = paste(pathsavefigs, "time_series_CO2.png", sep=""),width=10,height=7,units="in",res=400)
p3
dev.off()
# save figures
png(file = paste(pathsavefigs, "time_series_CH4.png", sep=""),width=10,height=7,units="in",res=400)
p4
dev.off()
# save figures
png(file = paste(pathsavefigs, "time_series_N2O.png", sep=""),width=10,height=7,units="in",res=400)
p5
dev.off()
p4
p4 <- ggplot(summarytab4atmp, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,50) #+ geom_line()
p4
p4 <- ggplot(summarytab4atmp, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,70) #+ geom_line()
p4
p5
# save figures
png(file = paste(pathsavefigs, "time_series_CH4.png", sep=""),width=10,height=7,units="in",res=400)
p4
dev.off()
tail(arrayGHGdf$DateTime2)
arrayGHGdf_systems <- subset(arrayGHGdf, arrayGHGdf$DateTime2 > "2016-01-01 09:17:00 UTC")
View(arrayGHGdf_systems)
arrayGHGdf_systems <- subset(arrayGHGdf, arrayGHGdf$DateTime2 > "2016-03-01 09:17:00 UTC")
View(arrayGHGdf_systems)
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
summarytab3atmp
str(arrayGHGdf_systems)
summarytab3atmpsys <- summarySE(data=arrayGHGdf_systems, measurevar="CO2_umolm2s_fluxuse", c("Date", "Chamber", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
summarytab3atmpsys
# summarySE CO2
summarytab3atmpsys <- summarySE(data=arrayGHGdf_systems, measurevar="CO2_umolm2s_fluxuse", c("Date", "Chamber", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
summarytab3btmpsys <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("Date", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
# summarySE CH4
summarytab4atmpsys <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("Date", "Chamber", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
summarytab4btmpsys <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("Date", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
# summarySE N2O
summarytab5atmpsys <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("Date", "Chamber", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
summarytab5btmpsys <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("Date", "Topo", "System"), na.rm=TRUE, renameallcols=TRUE)
p3sys <- ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
p3sys
str(summarytab3atmpsys)
ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2)
p3sys <- ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
p3sys
ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5)
ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)")
ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw()
p3sys <- ggplot(summarytab3atmpsys, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point()  + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
p3sys
p4sys <- ggplot(summarytab4atmpsys, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,70) #+ geom_line()+ theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25')))
p4sys
p4sys <- ggplot(summarytab4atmpsys, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,70) #+ geom_line()+ theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25')))
p4sys
ggplot(summarytab4atmpsys, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + facet_wrap( ~ System, nrow=2)
ggplot(summarytab5atmpsys, aes(x=Date, y=meanN2O_nmolm2s_fluxuse, color=Topo)) + geom_point() + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), alpha=0.5)
p5sys <- ggplot(summarytab5atmpsys, aes(x=Date, y=meanN2O_nmolm2s_fluxuse, color=Topo)) + geom_point() + facet_wrap( ~ System, nrow=2) + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), alpha=0.5) + ylab("N2O Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
chemdetect1
N2Odrift1
chemdetect1
N2Odrift1
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuseerror, color=CH4_nmolm2s_fluxuse)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw()
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuseerror, color=CH4_nmolm2s_fluxuse)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuseerror, color=CH4_nmolm2s_fluxuse)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-50000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 1000)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 300)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 300) + xlim(-20,150)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 300) + xlim(-50,150)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-5000, 300) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-500, 300) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=CH4_nmolm2s_fluxuseerror, color=Topo)) + geom_point() + theme_bw() + ylim(-500, 50) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-500, 50) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw()
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(50,5000) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-50,5000) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-10,5000) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-10,500) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-10,100) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=CH4_nmolm2s_fluxuse, y=abs(CH4_nmolm2s_fluxuseerror), color=Topo)) + geom_point() + theme_bw() + ylim(-10,200) + xlim(-30,50)
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + ylim(-100000, 1000)
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"))
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient2(limits=c(0, 50000))
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 50000))
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=CH4_nmolm2s_fluxuseerror)) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 50000), low="red", high="black")
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=abs(CH4_nmolm2s_fluxuseerror))) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 50000), low="red", high="black")
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=abs(CH4_nmolm2s_fluxuseerror))) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 5000), low="red", high="black")
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=abs(CH4_nmolm2s_fluxuseerror))) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 500), low="red", high="black")
ggplot(arrayGHGdf, aes(x=DateTime2, y=CH4_nmolm2s_fluxuse, color=abs(CH4_nmolm2s_fluxuseerror))) + geom_point() + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d")) + scale_colour_gradient(limits=c(0, 100), low="red", high="black")
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90))
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25')))
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)")
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-05-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG)
ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-05-10'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG)
errorcutoff <- 100
# print info about removed
tmp <- abs(arrayGHGdf$N2O_nmolm2s_fluxuseerror)
tmp2 <- tmp[tmp <= errorcutoff]
durationok <- length(tmp2)/length(tmp)
cat("You have removed flux measurements where the N2O error ratio was above the threshold proportion (",errorcutoff, "); this left ", durationok*100, "% of the samples remaining (", length(tmp2), " of ", length(tmp), ").", sep="")
arrayGHGdf$N2O_nmolm2s_fluxuse[abs(arrayGHGdf$N2O_nmolm2s_fluxuseerror) > errorcutoff] <- NA
arrayGHGdf$N2O_nmolm2s_fluxusetype[abs(arrayGHGdf$N2O_nmolm2s_fluxuseerror) > errorcutoff] <- NA
# summarySE CO2
summarytab3atmp <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("Date", "Chamber", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytab3btmp <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("Date", "Topo"), na.rm=TRUE, renameallcols=TRUE)
# summarySE CH4
summarytab4atmp <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("Date", "Chamber", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytab4btmp <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("Date", "Topo"), na.rm=TRUE, renameallcols=TRUE)
# summarySE N2O
summarytab5atmp <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("Date", "Chamber", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytab5btmp <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("Date", "Topo"), na.rm=TRUE, renameallcols=TRUE)
# convert summary table dates
#summarytab3a$Date <- ymd_hms(summarytab3atmp$Date)
#summarytab2$Date <- ymd_hms(summarytab2$Date)
# take out weird NA lines
#summarytab1 <- subset(summarytab1tmp,summarytab1tmp$N>0.5)
#summarytab2 <- subset(summarytab2tmp,summarytab2tmp$N>0.5)
########################################################################
# CO2, CH4, N2O TIME SERIES
#topocolorsGHG <- c("blue2","darkmagenta","firebrick2")
#topocolorsGHG <- rev(colorRampPalette(c('red','blue'), space = "Lab")(3))
topocolorsGHG <- rev(colorRampPalette(c('red','orange','purple','blue','dark blue'), space = "Lab")(3))
topobreaks <- c("1","2","3","4","5","6","7")
topolabs <- c("1 (Ridge)","2","3","4","5","6","7 (Valley)")
# CO2 by date (mean and se)
p3 <- ggplot(summarytab3atmp, aes(x=Date, y=meanCO2_umolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCO2_umolm2s_fluxuse-seCO2_umolm2s_fluxuse, ymax=meanCO2_umolm2s_fluxuse+seCO2_umolm2s_fluxuse), alpha=0.5) + ylab("CO2 Flux (umol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
# CH4 by date (mean and se)
p4 <- ggplot(summarytab4atmp, aes(x=Date, y=meanCH4_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanCH4_nmolm2s_fluxuse-seCH4_nmolm2s_fluxuse, ymax=meanCH4_nmolm2s_fluxuse+seCH4_nmolm2s_fluxuse), alpha=0.5) + ylab("CH4 Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) + ylim(-10,70) #+ geom_line()
# N2O by date (mean and se)
p5 <- ggplot(summarytab5atmp, aes(x=Date, y=meanN2O_nmolm2s_fluxuse, color=Topo)) + geom_point() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), alpha=0.5) + ylab("N2O Flux (nmol/m^2/s),\n(Mean +/- Standard Error)") + theme_bw() + theme(axis.text.x=element_text(angle=90)) + scale_x_datetime(breaks = date_breaks("4 weeks"), labels = date_format("%Y-%m-%d"), limits = ymd(c('2014-11-01','2016-02-25'))) + scale_colour_manual(name="Topographic\nLocation", values=topocolorsGHG) #+ geom_line()
p5
# summarySE sets - by drought period and topographic location for each gas, using fluxuse variables
summarytabDroughtTimePdsA1 <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("DroughtTimePds", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsA2 <- summarySE(data=arrayGHGdf, measurevar="CO2_umolm2s_fluxuse", c("DroughtTimePds"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsB1 <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("DroughtTimePds", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsB2 <- summarySE(data=arrayGHGdf, measurevar="CH4_nmolm2s_fluxuse", c("DroughtTimePds"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsC1 <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("DroughtTimePds", "Topo"), na.rm=TRUE, renameallcols=TRUE)
summarytabDroughtTimePdsC2 <- summarySE(data=arrayGHGdf, measurevar="N2O_nmolm2s_fluxuse", c("DroughtTimePds"), na.rm=TRUE, renameallcols=TRUE)
arrayGHGdf_noNA <- subset(arrayGHGdf, !is.na(N2O_nmolm2s_fluxuse))
aov_twoway_droughttopo = aov(log(abs(N2O_nmolm2s_fluxuse)) ~ DroughtTimePds + Topo + Error(Date/(DroughtTimePds + Topo)), data=arrayGHGdf_noNA)
# lme version of the one-way test
lme_twoway_droughttopo = lme(log(abs(N2O_nmolm2s_fluxuse)) ~ DroughtTimePds + Topo, data=arrayGHGdf_noNA, random = ~1|Date/Topo/DroughtTimePds)
# summary info; note different F values (apparently this is a known consequence)
summary(aov_twoway_droughttopo)
anova(lme_twoway_droughttopo)
plot(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="Diagnostic Trellis Plot")
scatter.smooth(fitted(lme_twoway_droughttopo),sqrt(abs(resid(lme_twoway_droughttopo))))
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
qqnorm(lme_twoway_droughttopo,col=arrayGHGdf_noNA$DroughtTimePds, main="QQ Plot", abline=c(0,1))
plot(lme_twoway_droughttopo,DroughtTimePds~resid(.))
plot(lme_twoway_droughttopo,Topo~resid(.))
posthoc_glht_1 <- summary(glht(lme_twoway_droughttopo, linfct=mcp(DroughtTimePds = "Tukey")), test = adjusted(type = "bonferroni"))
posthoc_glht_2 <- summary(glht(lme_twoway_droughttopo, linfct=mcp(Topo = "Tukey")), test = adjusted(type = "bonferroni"))
posthoc_glht_1
posthoc_glht_2
# set significance stars for graphs
cor_stars <- numeric(length=2)
# cycle through to set number of stars
for (i in 1:2) {
if(anova(lme_twoway_droughttopo)[1+i,4] < 0.001){
cor_stars[i] <- "***"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.01){
cor_stars[i] <- "**"
} else if(anova(lme_twoway_droughttopo)[1+i,4] < 0.05){
cor_stars[i] <- "*"
} else {
cor_stars[i] <- "NS"
}
}
sig_stars_N2Otwoway <- cor_stars
p6c <- ggplot(summarytabDroughtTimePdsC2, aes(x=DroughtTimePds, y=meanN2O_nmolm2s_fluxuse)) + geom_bar(stat = "identity") + xlab("Drought Time Period") + ylab("N2O Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), width = 0.65)
p6c
p7c <- ggplot(summarytabDroughtTimePdsC1, aes(x=DroughtTimePds, y=meanN2O_nmolm2s_fluxuse, fill=Topo)) + geom_bar(stat = "identity", position=position_dodge(width=0.9)) + xlab("Drought Time Period") + ylab("N2O Flux (nmol/m^2/s)\n(Mean +/- Standard Error)") + theme_bw() + geom_errorbar(aes(ymin=meanN2O_nmolm2s_fluxuse-seN2O_nmolm2s_fluxuse, ymax=meanN2O_nmolm2s_fluxuse+seN2O_nmolm2s_fluxuse), position = position_dodge(width=0.9), width = 0.65) + scale_fill_manual(name="Topographic\nLocation", values=topocolorsGHG) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=1.4, label = paste("Drought period main effect ",sig_stars_N2Otwoway[1]), size=rhosize) + annotate(geom="text", x = -Inf, y = Inf, hjust=-0.05, vjust=2.7, label = paste("Topography main effect ",sig_stars_N2Otwoway[2]), size=rhosize)
p7c
depthO2 <- read.csv(paste(pathdata, "initial_depth_o2.csv", sep = ""), stringsAsFactors=FALSE)
# figure-precipO2moisture-arraydepth.R
#
# work with the O2 and moisture sensors for the depth measurements
#
# O2 - redox - GHG project
# CS O'Connell, UCB, Silver Lab
# output products:
# figures in folder /ArrayDepth-Figures/
########################################################################
# GET READY TO BRING IN DATA
library(ggplot2)
library(gridExtra)
library(scales)
library(dplyr)
library(nlme)      ## for lme()
library(multcomp)  ## for multiple comparison stuff
#library(data.table)
#library(chron)
library(lubridate)
#library(lattice)
#library(reshape2)
#options(java.parameters = "-Xmx5000m") # make sure there's sufficient memory to open excel file
library(xlsx)
library(strucchange) # piecewise regression
# summarySE using plyr
source("~/Documents/GITHUB/RPersonalFunctionsChristine/summarySE.r")
# where to save outputs
pathsavefigs = "~/Documents/GITHUB/cso041code_ArrayDepth/ArrayDepth-Figures/"
pathdata = "~/Documents/GITHUB/cso041code_ArrayDepth/"
depthO2 <- read.csv(paste(pathdata, "initial_depth_o2.csv", sep = ""), stringsAsFactors=FALSE)
View(depthO2)
str(depthO2)
timestamp2 <- mdyhm(depthO2$TIMESTAMP)
?mdy
timestamp2 <- mdyhmm(depthO2$TIMESTAMP)
timestamp2 <- mdy_hm(depthO2$TIMESTAMP)
str(depthO2)
depthO2$timestamp2 <- mdyhm(depthO2$TIMESTAMP)
depthO2$timestamp2 <- mdy_hm(depthO2$TIMESTAMP)
str(depthO2$)
str(depthO2)
View(depthO2)
library(reshape2)
depthO2long <- melt(depthO2, id.vars = "timestamp2")
View(depthO2long)
View(depthO2)
depthO2long <- melt(depthO2, id.vars = "timestamp2", measure.vars = grep("signal^", names(dat), value = TRUE))
depthO2long <- melt(depthO2, id.vars = "timestamp2", measure.vars = grep("signal^", names(depthO2), value = TRUE))
View(depthO2long)
depthO2long <- melt(depthO2, id.vars = "timestamp2", measure.vars = grep("signal", names(depthO2), value = TRUE))
View(depthO2long)
ggplot(depthO2long, aes(y = value, x = timestamp2, colour = as.factor(variable))) +
geom_point() +
geom_line(aes(group = variable))
View(depthO2)
View(depthO2long)
depthO2long$O2pct <- ((depthO2long$value * slopeuse) - interceptuse) * 100
View(depthO2long)
slopeuse <- 0.004278315
interceptuse <- 0.012834944
depthO2long$O2pct <- ((depthO2long$value * slopeuse) - interceptuse) * 100
View(depthO2long)
ggplot(depthO2long, aes(y = O2pct, x = timestamp2, colour = as.factor(variable))) + geom_point() + geom_line(aes(group = variable))
?subset
View(depthO2long)
depthO2long_use <- subset(depthO2long, variable != "signal_4_Avg.10.")
View(depthO2long_use)
ggplot(depthO2long_use, aes(y = O2pct, x = timestamp2, colour = as.factor(variable))) + geom_point() + geom_line(aes(group = variable))
# figure-soilvars-ghgarraydrought.R
#
# make the drought paper soil variables bar graph figures
#
# O2 - redox - GHG project
# CS O'Connell, UCB, Silver Lab
# see also:
# PR_ElVerdeArray_SoilData_Master_Combo_csv.csv is organized by hand by Christine
# output products:
# figures in folder /DroughtMSFigures/
# tables in /DroughtMSTables/
########################################################################
# GET READY TO BRING IN DATA
library(ggplot2)
library(gridExtra)
library(scales)
library(dplyr)
library(nlme)      ## for lme()
library(multcomp)  ## for multiple comparison stuff
#library(data.table)
#library(chron)
library(lubridate)
#library(lattice)
#library(reshape2)
#options(java.parameters = "-Xmx5000m") # make sure there's sufficient memory to open excel file
library(xlsx)
# summarySE using plyr
source("~/Documents/GITHUB/RPersonalFunctionsChristine/summarySE.r")
# gen_data_aov_onlymeansdN
source("~/Documents/GITHUB/RPersonalFunctionsChristine/gen_data_aov_onlymeansdN.r")
# where to save outputs
pathsavefiles = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Rprocessed/"
pathsavefigs = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Analyses/DroughtMSFigures/"
pathsavetab = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Analyses/DroughtMSTables/"
pathsoildata = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Raw/Soil-data/"
########################################################################
# ORGANIZE SOIL VARIABLES
# load csv
soilvardf <- read.csv(paste(pathsoildata, "PR_ElVerdeArray_SoilData_Master_Combo_csv.csv", sep = ""), stringsAsFactors=FALSE)
# nice names
newnames <- c("Sample","Location","Replicate","Depth","DroughtTimePds","SamplingMonth","TinWgt_g","TinWetSoil_g","TinDrySoil_g","SoilMeasured_FeinHCl_g","SoilMeasured_PinNaHCO3_g","SoilMeasured_pH_g","pH_timeH2Oin","pH_timeread","pH","ReagentMeasured_NaOH","ReagentMeasured_NaHCO3","ReagentMeasured_HCl","ReagentMeasured_KClday0","ReagentMeasured_KClday7","SoilMeasured_NinKClconcentrationsday0_g","SoilMeasured_NinKCltransformationsday0_g","SoilMeasured_NinKCltransformationsday7_g","FeIIconcentration_mgFeg","FeII_IIIconcentration_mgFeg","FeIIIconcentration_mgFeg","P_i_bicarb","P_t_bicarb","P_o_bicarb","P_i_NaOH","P_t_NaOH","P_o_NaOH","P_total")
names(soilvardf) <- newnames
# make factors where needed
soilvardf$Location <- as.factor(soilvardf$Location)
soilvardf$Depth <- as.factor(soilvardf$Depth)
soilvardf$DroughtTimePds <- as.factor(soilvardf$DroughtTimePds)
# reorder time period factor to make temporally appropriate
print(levels(soilvardf$DroughtTimePds))
soilvardf$DroughtTimePds <- factor(soilvardf$DroughtTimePds,levels(soilvardf$DroughtTimePds)[c(4,2,3,1)])
print(levels(soilvardf$DroughtTimePds))
# make numeric where needed
soilvardf$FeIIconcentration_mgFeg <- as.numeric(soilvardf$FeIIconcentration_mgFeg)
soilvardf$FeII_IIIconcentration_mgFeg <- as.numeric(soilvardf$FeII_IIIconcentration_mgFeg)
# str(soilvardf)
# make variable where mid and low slope are combined
soilvardf$Topo <- NA
soilvardf$Topo[soilvardf$Location=="Ridge"] <- "Ridge"
soilvardf$Topo[soilvardf$Location=="Valley"] <- "Valley"
soilvardf$Topo[soilvardf$Location=="Slope" | soilvardf$Location=="Low-slope" | soilvardf$Location=="Mid-slope"] <- "Slope"
# get rid of places where Fe(III) is negative
soilvardf$FeIIIconcentration_mgFeg[soilvardf$FeIIIconcentration_mgFeg < 0] <- NA
soilvardf$FeIIconcentration_mgFeg[soilvardf$FeIIIconcentration_mgFeg < 0] <- NA
soilvardf$FeII_IIIconcentration_mgFeg[soilvardf$FeIIIconcentration_mgFeg < 0] <- NA
# get means, std, ste for each period
# summarySE using plyr
source("~/Documents/GITHUB/RPersonalFunctionsChristine/summarySE.r")
# summarySE sets - by drought period and topographic location for each variable of interest
# pH
summarytabSoilVarspH <- summarySE(data=soilvardf, measurevar="pH", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarspH <- subset(summarytabSoilVarspH, summarytabSoilVarspH$N>0)
# Fe(II)
summarytabSoilVarsFeII <- summarySE(data=soilvardf, measurevar="FeIIconcentration_mgFeg", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarsFeII <- subset(summarytabSoilVarsFeII, summarytabSoilVarsFeII$N>0)
# Fe(III)
#soilvardf$FeIIIminusFeII <- soilvardf$FeII_IIIconcentration_mgFeg - soilvardf$FeIIconcentration_mgFeg
summarytabSoilVarsFeIII <- summarySE(data=soilvardf, measurevar="FeIIIconcentration_mgFeg", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarsFeIII <- subset(summarytabSoilVarsFeIII, summarytabSoilVarsFeIII$N>0)
# Pi
soilvardf$PiCombo <- soilvardf$P_i_bicarb + soilvardf$P_i_NaOH
summarytabSoilVarsPiCombo <- summarySE(data=soilvardf, measurevar="PiCombo", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarsPiCombo <- subset(summarytabSoilVarsPiCombo, summarytabSoilVarsPiCombo$N>0)
# Po
soilvardf$PoCombo <- soilvardf$P_o_bicarb + soilvardf$P_o_NaOH
summarytabSoilVarsPoCombo <- summarySE(data=soilvardf, measurevar="PoCombo", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarsPoCombo <- subset(summarytabSoilVarsPoCombo, summarytabSoilVarsPoCombo$N>0)
summarytabSoilVarsPiCombo <- subset(summarytabSoilVarsPiCombo, summarytabSoilVarsPiCombo$Depth == "0-15")
summarytabSoilVarsPiCombo
# figure-soilvars-ghgarraydrought.R
#
# make the drought paper soil variables bar graph figures
#
# O2 - redox - GHG project
# CS O'Connell, UCB, Silver Lab
# see also:
# PR_ElVerdeArray_SoilData_Master_Combo_csv.csv is organized by hand by Christine
# output products:
# figures in folder /DroughtMSFigures/
# tables in /DroughtMSTables/
########################################################################
# GET READY TO BRING IN DATA
library(ggplot2)
library(gridExtra)
library(scales)
library(dplyr)
library(nlme)      ## for lme()
library(multcomp)  ## for multiple comparison stuff
#library(data.table)
#library(chron)
library(lubridate)
#library(lattice)
#library(reshape2)
#options(java.parameters = "-Xmx5000m") # make sure there's sufficient memory to open excel file
library(xlsx)
# summarySE using plyr
source("~/Documents/GITHUB/RPersonalFunctionsChristine/summarySE.r")
# gen_data_aov_onlymeansdN
source("~/Documents/GITHUB/RPersonalFunctionsChristine/gen_data_aov_onlymeansdN.r")
# where to save outputs
pathsavefiles = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Rprocessed/"
pathsavefigs = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Analyses/DroughtMSFigures/"
pathsavetab = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Analyses/DroughtMSTables/"
pathsoildata = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Raw/Soil-data/"
########################################################################
# ORGANIZE SOIL VARIABLES
# load csv
soilvardf <- read.csv(paste(pathsoildata, "PR_ElVerdeArray_SoilData_Master_Combo_csv.csv", sep = ""), stringsAsFactors=FALSE)
# nice names
newnames <- c("Sample","Location","Replicate","Depth","DroughtTimePds","SamplingMonth","TinWgt_g","TinWetSoil_g","TinDrySoil_g","SoilMeasured_FeinHCl_g","SoilMeasured_PinNaHCO3_g","SoilMeasured_pH_g","pH_timeH2Oin","pH_timeread","pH","ReagentMeasured_NaOH","ReagentMeasured_NaHCO3","ReagentMeasured_HCl","ReagentMeasured_KClday0","ReagentMeasured_KClday7","SoilMeasured_NinKClconcentrationsday0_g","SoilMeasured_NinKCltransformationsday0_g","SoilMeasured_NinKCltransformationsday7_g","FeIIconcentration_mgFeg","FeII_IIIconcentration_mgFeg","FeIIIconcentration_mgFeg","P_i_bicarb","P_t_bicarb","P_o_bicarb","P_i_NaOH","P_t_NaOH","P_o_NaOH","P_total")
names(soilvardf) <- newnames
# make factors where needed
soilvardf$Location <- as.factor(soilvardf$Location)
soilvardf$Depth <- as.factor(soilvardf$Depth)
soilvardf$DroughtTimePds <- as.factor(soilvardf$DroughtTimePds)
# reorder time period factor to make temporally appropriate
print(levels(soilvardf$DroughtTimePds))
soilvardf$DroughtTimePds <- factor(soilvardf$DroughtTimePds,levels(soilvardf$DroughtTimePds)[c(4,2,3,1)])
print(levels(soilvardf$DroughtTimePds))
# make numeric where needed
soilvardf$FeIIconcentration_mgFeg <- as.numeric(soilvardf$FeIIconcentration_mgFeg)
soilvardf$FeII_IIIconcentration_mgFeg <- as.numeric(soilvardf$FeII_IIIconcentration_mgFeg)
# str(soilvardf)
# make variable where mid and low slope are combined
soilvardf$Topo <- NA
soilvardf$Topo[soilvardf$Location=="Ridge"] <- "Ridge"
soilvardf$Topo[soilvardf$Location=="Valley"] <- "Valley"
soilvardf$Topo[soilvardf$Location=="Slope" | soilvardf$Location=="Low-slope" | soilvardf$Location=="Mid-slope"] <- "Slope"
# get rid of places where Fe(III) is negative
soilvardf$FeIIIconcentration_mgFeg[soilvardf$FeIIIconcentration_mgFeg < 0] <- NA
soilvardf$FeIIconcentration_mgFeg[soilvardf$FeIIIconcentration_mgFeg < 0] <- NA
soilvardf$FeII_IIIconcentration_mgFeg[soilvardf$FeIIIconcentration_mgFeg < 0] <- NA
# get means, std, ste for each period
# summarySE using plyr
source("~/Documents/GITHUB/RPersonalFunctionsChristine/summarySE.r")
# summarySE sets - by drought period and topographic location for each variable of interest
# pH
summarytabSoilVarspH <- summarySE(data=soilvardf, measurevar="pH", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarspH <- subset(summarytabSoilVarspH, summarytabSoilVarspH$N>0)
# Fe(II)
summarytabSoilVarsFeII <- summarySE(data=soilvardf, measurevar="FeIIconcentration_mgFeg", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarsFeII <- subset(summarytabSoilVarsFeII, summarytabSoilVarsFeII$N>0)
# Fe(III)
#soilvardf$FeIIIminusFeII <- soilvardf$FeII_IIIconcentration_mgFeg - soilvardf$FeIIconcentration_mgFeg
summarytabSoilVarsFeIII <- summarySE(data=soilvardf, measurevar="FeIIIconcentration_mgFeg", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarsFeIII <- subset(summarytabSoilVarsFeIII, summarytabSoilVarsFeIII$N>0)
# Pi
soilvardf$PiCombo <- soilvardf$P_i_bicarb + soilvardf$P_i_NaOH
summarytabSoilVarsPiCombo <- summarySE(data=soilvardf, measurevar="PiCombo", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarsPiCombo <- subset(summarytabSoilVarsPiCombo, summarytabSoilVarsPiCombo$N>0)
# Po
soilvardf$PoCombo <- soilvardf$P_o_bicarb + soilvardf$P_o_NaOH
summarytabSoilVarsPoCombo <- summarySE(data=soilvardf, measurevar="PoCombo", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
# get rid of weird categories
summarytabSoilVarsPoCombo <- subset(summarytabSoilVarsPoCombo, summarytabSoilVarsPoCombo$N>0)
summarytabSoilVarsPiCombo
# figure-soilvars-ghgarraydrought.R
#
# make the drought paper soil variables bar graph figures
#
# O2 - redox - GHG project
# CS O'Connell, UCB, Silver Lab
# see also:
# PR_ElVerdeArray_SoilData_Master_Combo_csv.csv is organized by hand by Christine
# output products:
# figures in folder /DroughtMSFigures/
# tables in /DroughtMSTables/
########################################################################
# GET READY TO BRING IN DATA
library(ggplot2)
library(gridExtra)
library(scales)
library(dplyr)
library(nlme)      ## for lme()
library(multcomp)  ## for multiple comparison stuff
#library(data.table)
#library(chron)
library(lubridate)
#library(lattice)
#library(reshape2)
#options(java.parameters = "-Xmx5000m") # make sure there's sufficient memory to open excel file
library(xlsx)
# summarySE using plyr
source("~/Documents/GITHUB/RPersonalFunctionsChristine/summarySE.r")
# gen_data_aov_onlymeansdN
source("~/Documents/GITHUB/RPersonalFunctionsChristine/gen_data_aov_onlymeansdN.r")
# where to save outputs
pathsavefiles = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Rprocessed/"
pathsavefigs = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Analyses/DroughtMSFigures/"
pathsavetab = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Analyses/DroughtMSTables/"
pathsoildata = "~/Documents/GITHUB/cso040code_ArrayGHG/ArrayGHG-Data-Raw/Soil-data/"
########################################################################
# ORGANIZE SOIL VARIABLES
# load csv
soilvardf <- read.csv(paste(pathsoildata, "PR_ElVerdeArray_SoilData_Master_Combo_csv.csv", sep = ""), stringsAsFactors=FALSE)
# nice names
newnames <- c("Sample","Location","Replicate","Depth","DroughtTimePds","SamplingMonth","TinWgt_g","TinWetSoil_g","TinDrySoil_g","SoilMeasured_FeinHCl_g","SoilMeasured_PinNaHCO3_g","SoilMeasured_pH_g","pH_timeH2Oin","pH_timeread","pH","ReagentMeasured_NaOH","ReagentMeasured_NaHCO3","ReagentMeasured_HCl","ReagentMeasured_KClday0","ReagentMeasured_KClday7","SoilMeasured_NinKClconcentrationsday0_g","SoilMeasured_NinKCltransformationsday0_g","SoilMeasured_NinKCltransformationsday7_g","FeIIconcentration_mgFeg","FeII_IIIconcentration_mgFeg","FeIIIconcentration_mgFeg","P_i_bicarb","P_t_bicarb","P_o_bicarb","P_i_NaOH","P_t_NaOH","P_o_NaOH","P_total")
names(soilvardf) <- newnames
# make factors where needed
soilvardf$Location <- as.factor(soilvardf$Location)
soilvardf$Depth <- as.factor(soilvardf$Depth)
soilvardf$DroughtTimePds <- as.factor(soilvardf$DroughtTimePds)
# reorder time period factor to make temporally appropriate
print(levels(soilvardf$DroughtTimePds))
soilvardf$DroughtTimePds <- factor(soilvardf$DroughtTimePds,levels(soilvardf$DroughtTimePds)[c(4,2,3,1)])
print(levels(soilvardf$DroughtTimePds))
# make numeric where needed
soilvardf$FeIIconcentration_mgFeg <- as.numeric(soilvardf$FeIIconcentration_mgFeg)
soilvardf$FeII_IIIconcentration_mgFeg <- as.numeric(soilvardf$FeII_IIIconcentration_mgFeg)
# str(soilvardf)
# make variable where mid and low slope are combined
soilvardf$Topo <- NA
soilvardf$Topo[soilvardf$Location=="Ridge"] <- "Ridge"
soilvardf$Topo[soilvardf$Location=="Valley"] <- "Valley"
soilvardf$Topo[soilvardf$Location=="Slope" | soilvardf$Location=="Low-slope" | soilvardf$Location=="Mid-slope"] <- "Slope"
# get rid of places where Fe(III) is negative
soilvardf$FeIIIconcentration_mgFeg[soilvardf$FeIIIconcentration_mgFeg < 0] <- NA
soilvardf$FeIIconcentration_mgFeg[soilvardf$FeIIIconcentration_mgFeg < 0] <- NA
soilvardf$FeII_IIIconcentration_mgFeg[soilvardf$FeIIIconcentration_mgFeg < 0] <- NA
View(soilvardf)
soilvardf$PiCombo <- soilvardf$P_i_bicarb + soilvardf$P_i_NaOH
summarytabSoilVarsPiCombo <- summarySE(data=soilvardf, measurevar="PiCombo", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
summarytabSoilVarsPiCombo
summarytabSoilVarsPiCombo <- subset(summarytabSoilVarsPiCombo, summarytabSoilVarsPiCombo$N>0)
summarytabSoilVarsPiCombo
summarytabSoilVarsPiCombo <- summarySE(data=soilvardf, measurevar="PiCombo", c("DroughtTimePds", "Topo","Depth"), na.rm=TRUE, renameallcols=TRUE)
summarytabSoilVarsPiCombo
View(soilvardf)
View(depthO2)
